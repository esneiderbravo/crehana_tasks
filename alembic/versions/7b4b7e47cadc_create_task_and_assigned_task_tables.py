"""create task and assigned_task tables

Revision ID: 7b4b7e47cadc
Revises: 4ecfa840d983
Create Date: 2025-07-09 20:46:15.280287

"""

from sqlalchemy import MetaData

# revision identifiers, used by Alembic.
revision = "7b4b7e47cadc"
down_revision = "4ecfa840d983"
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE TYPE task_priority AS ENUM ('low', 'medium', 'high')")
    op.execute("CREATE TYPE task_status AS ENUM ('pending', 'in_process', 'completed')")

    op.create_table(
        "task",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "priority",
            sa.Enum("low", "medium", "high", name="task_priority", metadata=MetaData()),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "pending",
                "in_process",
                "completed",
                name="task_status",
                metadata=MetaData(),
            ),
            nullable=False,
        ),
        sa.Column("completed_percentage", sa.Integer(), nullable=True),
        sa.Column("task_list_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.ForeignKeyConstraint(["task_list_id"], ["task_list.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "assigned_task",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("task_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.ForeignKeyConstraint(["task_id"], ["task.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("assigned_task")
    op.drop_table("task")
    op.execute("DROP TYPE task_priority")
    op.execute("DROP TYPE task_status")
    # ### end Alembic commands ###
